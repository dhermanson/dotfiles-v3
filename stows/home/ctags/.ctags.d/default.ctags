--langdef=snippets
--langmap=snippets:.snippets
--regex-snippets=/^snippet (.*)/\1/s,snippet/

--langmap=PHP:.php
--regex-php=/^[ \t]*trait[ \t]+([a-zA-Z0-9_]+)/\1/t,trait/
--regex-php=/^[ \t]*((final|abstract)[ \t]+)*class[ \t]+([a-zA-Z0-9_]+)/\3/z,class/
--regex-php=/^[ \t]*((static|abstract|public|protected|private)[ \t]+)*function[ \t]+(\&\s+)?([^ (]+)/\4/x,function/
--regex-php=/^[ \t]*((static|abstract|public|protected|private)[ \t]+)*function[ \t]+test(\&\s+)?([^ (]+)/\4/u,testMethod/
--regex-php=/^[ \t]*interface[ \t]+([a-zA-Z0-9_]+)/\1/y,interface/
--regex-php=/^[ \t]*const[ \t]+([a-zA-Z0-9_]+)/const.\1/w,constant/
--regex-php=/^[ \t]*\*[ \t]*@property(\-read|\-write)*[ \t]+[a-zA-Z0-9_]+[ \t]+\$([a-zA-Z0-9_]+)/\2/p,property/
--regex-php=/^[ \t]*\*[ \t]*@property(\-read|\-write)*[ \t]+static[ \t]+[a-zA-Z0-9_]+[ \t]+\$([a-zA-Z0-9_]+)/\2/r,static property/
--regex-php=/^[ \t]*\*[ \t]*@method[ \t]+[a-zA-Z0-9_]+[ \t]+([a-zA-Z0-9_]+())/\1/m,method/
--regex-php=/^[ \t]*\*[ \t]*@method[ \t]+static[ \t]+[a-zA-Z0-9_]+[ \t]+([a-zA-Z0-9_]+)/\1/s,static method/

--langdef=groovy
--langmap=groovy:.groovy
--regex-groovy=/^[ \t]*[(private|public|protected) ( \t)]*def[ \t]+([A-Za-z0-9_]+)[ \t]*\(/\1/f,function,functions/
--regex-groovy=/^[ \t]*private def[ \t]+([A-Za-z0-9_]+)[ \t]*/\1/v,private,private variables/
--regex-groovy=/^[ \t]*public def[ \t]+([A-Za-z0-9_]+)[ \t]*/\1/u,public,public variables/
--regex-groovy=/^[ \t]*[abstract ( \t)]*[(private|public) ( \t)]*class[ \t]+([A-Za-z0-9_]+)[ \t]*/\1/c,class,classes/
--regex-groovy=/^[ \t]*[abstract ( \t)]*[(private|public) ( \t)]*enum[ \t]+([A-Za-z0-9_]+)[ \t]*/\1/c,class,classes/


--langdef=vb
--langmap=vb:.vb
--regex-vb=/^[ \t]*(Public|Private)?[ \t]*Sub[ \t]+([a-zA-Z0-9_]+)/\2/s,subroutine/i
--regex-vb=/^[ \t]*(Public|Private)?[ \t]*Function[ \t]+([a-zA-Z0-9_]+)/\2/f,function/i
